{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///external commonjs \"tslib\"","webpack:///external commonjs \"express\"","webpack:///external node-commonjs \"path\"","webpack:///external commonjs \"cors\"","webpack:///external commonjs \"socket.io\"","webpack:///./src/routes/chart.ts","webpack:///external node-commonjs \"fs\"","webpack:///webpack/bootstrap","webpack:///./src/main.ts"],"sourcesContent":["module.exports = require(\"tslib\");","module.exports = require(\"express\");","module.exports = require(\"path\");","module.exports = require(\"cors\");","module.exports = require(\"socket.io\");","import express, {Router} from \"express\";\nimport {\n  ClientToServerEvents,\n  InterServerEvents,\n  ServerToClientEvents, SocketData\n} from \"@myorg/socket-io\";\nimport {Server} from \"socket.io\";\nimport {ChartConfiguration,} from \"chart.js\";\nimport {Request} from 'express';\nimport {\n  Data as ChartData,\n  EditData,\n  EditDataset,\n  EditLabels,\n  Status\n} from \"@myorg/type-definitions\";\nimport path from \"path\";\nimport * as fs from \"fs\";\n\nconst p = path.join(__dirname, 'assets/chart.json');\n\nfunction clientErrorHandler(err, req, res, next) {\n  if (!req.params.chart_id) {\n    res.status(500).json({error: 'Missing chart id '})\n  } else {\n    next(err)\n  }\n}\n\nfunction errorHandler(err: Error, req, res, next) {\n  console.log(err)\n  res.status(500).json({error: err.message})\n}\n\nasync function loadChart(chart_id: string) {\n  return new Promise<any>((res, rej) => {\n    fs.readFile(p, 'utf-8', (err, data) => {\n      if (err) {\n        rej(err);\n      }\n      res(JSON.parse(data));\n    });\n  })\n\n}\n\nexport function chartRouter(io: Server<\n  ClientToServerEvents,\n  ServerToClientEvents,\n  InterServerEvents,\n  SocketData\n>): Router {\n  const router = express.Router();\n\n  router.use(express.json({limit: '500kb'}));\n  router.use(express.urlencoded({\n    extended: true,\n    limit: '500kb'\n  }));\n\n\n  // update\n  router.put('/', (req: Request<{}, string, EditData>, res) => {\n    const body = req.body;\n    if ('datasets' in body)\n      io.emit(\"editChartDataset\", req.body as EditDataset, () => {\n        res.send('Chart updated.');\n      });\n    if ('labels' in body)\n      io.emit(\"editChartLabels\", req.body as EditLabels, () => {\n        res.send('Chart updated.');\n      });\n  });\n\n\n// middleware that is specific to this router\n  router.use((req: Request<{ key: number }, ChartConfiguration>, res, next) => {\n    console.log('Request size: ' + Number(req.headers['content-length']) / 1e6 + 'mb')\n    next()\n  });\n\n  router.use(clientErrorHandler);\n\n// define the home page route\n  router.get('/:chart_id?', (req, res, next) => {\n    const id = req.params.chart_id;\n\n    if (!id) {\n      next(new Error('Missing chart_id'));\n      return;\n    }\n    res.redirect('/assets/chart.json');\n  });\n\n  router.get('/save/:chart_id', (req: Request<{ chart_id: string }>, res, next) => {\n    io.timeout(1000).emit('saveChart', (err, responses) => {\n      if (err) {\n        next(err);\n      } else {\n        if (responses.length && responses[0].config) {\n          fs.readFile(p, 'utf-8', (err, content) => {\n            const {chart_id} = req.params;\n\n            const storage = JSON.parse(content);\n            storage[chart_id] = responses[0].config;\n\n            fs.writeFile(p, JSON.stringify(storage), {encoding: 'utf-8'}, (err) => {\n              if (err) {\n                next(err);\n                return;\n              }\n              const status = responses[0].status;\n              res.status(200).json({success: status.success, id: chart_id});\n            });\n          });\n        } else {\n          res.json({info: 'No chart data to save.'})\n        }\n      }\n    });\n  });\n\n  router.get('/load/:chart_id', (req: Request<{ chart_id: string }, Status, any>, res, next) => {\n    fs.readFile(p, 'utf-8', (err, content) => {\n      if (err) {\n        next(err);\n      }\n      const {chart_id} = req.params;\n      const storage = JSON.parse(content);\n      const data = storage[chart_id];\n      if (!data) {\n        next(new Error('No data forst chart id: ' + chart_id));\n        return;\n      }\n      io.timeout(2000).emit('loadChart', data, (err, responses) => {\n        res.json(responses[0]);\n      });\n    });\n  });\n\n  // overwrite existing datasets\n  router.post('/', (req: Request<{}, string, ChartData>, res, next) => {\n    try {\n      io.emit(\"new\", req.body, () => {\n        res.send('created new chart')\n      });\n    } catch (e) {\n      next(e)\n    }\n  });\n  router.use(errorHandler);\n\n  return router;\n}\n\n\n","module.exports = require(\"fs\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\n\nimport express from 'express';\nimport * as path from 'path';\nimport cors from 'cors';\nimport {Server} from \"socket.io\";\nimport {ClientToServerEvents, InterServerEvents, ServerToClientEvents, SocketData} from \"@myorg/socket-io\"\nimport {chartRouter} from \"./routes/chart\";\n\nconst app = express();\n\n\nconst port = process.env.PORT || 3333;\nconst server = app.listen(port, () => {\n  console.log(`Listening at http://localhost:${port}/api`);\n});\n\nserver.on('error', console.error);\n\nconst io = new Server<\n  ClientToServerEvents,\n  ServerToClientEvents,\n  InterServerEvents,\n  SocketData\n>(server);\n\nio.on('connection', (socket) => {\n  console.log('new client connected');\n});\n\napp.use(cors<express.Request>());\napp.use('/chart', chartRouter(io));\n\napp.get('/dashboard', function (req, res) {\n  res.sendFile(path.resolve('dist/packages/dashboard/index.html'));\n});\n\napp.use('/assets', express.static(path.join(__dirname, 'assets')));\n\napp.get('/api', async (req, res) => {\n  res.send('Hello')\n});\n\napp.get('/fred/search', async (req, res) => {\n  const params = req.query;\n});\n\n\napp.use((req, res, next) => {\n  console.log('middleware logging');\n  next();\n});\n"],"names":[],"sourceRoot":""}